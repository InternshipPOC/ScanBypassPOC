apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchdb
  namespace: scanbypass
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchdb
  template:
    metadata:
      labels:
        app: couchdb
    spec:
      containers:
      - name: couchdb
        image: ghcr.io/internshippoc/my-couchdb:3
        ports:
        - containerPort: 5984
        env:
        - name: COUCHDB_USER
          valueFrom:
            secretKeyRef:
              name: couchdb-secret
              key: COUCHDB_USER
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: couchdb-secret
              key: COUCHDB_PASSWORD
        volumeMounts:
        - name: couchdb-data
          mountPath: /opt/couchdb/data
      volumes:
      - name: couchdb-data
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: couchdb
  namespace: scanbypass
spec:
  ports:
  - port: 5984
    targetPort: 5984
  selector:
    app: couchdb
---
---
apiVersion: batch/v1
kind: Job
metadata:
  name: couchdb-init
  namespace: scanbypass
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: init-couchdb
        image: curlimages/curl:latest
        env:
        - name: COUCHDB_USER
          valueFrom:
            secretKeyRef:
              name: couchdb-secret
              key: COUCHDB_USER
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: couchdb-secret
              key: COUCHDB_PASSWORD
        command:
        - /bin/sh
        - -c
        - |
          until curl -u "$COUCHDB_USER:$COUCHDB_PASSWORD" http://couchdb:5984/_up; do
            echo "Waiting for CouchDB..."
            sleep 2
          done
          echo "CouchDB is up. Creating system databases..."
          for db in _users _replicator _global_changes; do
            curl -u "$COUCHDB_USER:$COUCHDB_PASSWORD" -X PUT http://couchdb:5984/$db
          done
